package com.wh.controller.msp;

import java.util.List;
import java.util.Map;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import com.wh.base.AjaxJson;
import com.wh.controller.common.BaseController;
import com.wh.util.StringUtil;
import com.wh.util.msp.JdbcTest;

@Controller
@RequestMapping("/msp/mspOracle")
public class MspOraclController extends BaseController {
	private Logger log = LoggerFactory.getLogger(this.getClass());

	/**
	 * 
	 * 学生缴费信息
	 * 
	 * @param req
	 * @param resp
	 */
	@RequestMapping(value = "/wx/xsjf.htm", method = { RequestMethod.POST, RequestMethod.GET })
	@ResponseBody
	public AjaxJson xsjf(HttpServletRequest req, HttpServletResponse resp) {
		AjaxJson json = new AjaxJson();
		JdbcTest jt = new JdbcTest();
		String xh = (String) req.getSession().getAttribute("wxid");
		// xh = "1020161525";
		if (StringUtil.isNotEmpty(xh)) {
			List<Map<String, Object>> userList = jt.xsjf(xh);
			if (userList != null && userList.size() > 0) {
				json.setObj(userList);
			}
			Map<String, Object> map = jt.xsjfTotal(xh);
			if (map != null && map.size() > 0) {
				json.setAttributes(map);
			}
		}

		return json;
	}

	/**
	 * 图书借阅
	 * 
	 * @param req
	 * @param resp
	 * @param bookName
	 *            图书名称
	 * @param bookStatus
	 *            图书状态
	 * @return
	 */
	@RequestMapping(value = "/wx/tsjy.htm", method = { RequestMethod.POST, RequestMethod.GET })
	@ResponseBody
	public AjaxJson tsjy(HttpServletRequest req, HttpServletResponse resp, String bookName, String bookStatus) {
		AjaxJson json = new AjaxJson();
		JdbcTest jt = new JdbcTest();
		String xh = (String) req.getSession().getAttribute("wxid");
		xh = "2003060631";
		if (StringUtil.isNotEmpty(xh)) {
			List<Map<String, Object>> userList = jt.tsjy(xh, bookName, bookStatus);
			if (userList != null && userList.size() > 0) {
				json.setObj(userList);
			}
		}

		return json;
	}

	/**
	 * 课程安排
	 * 
	 * @param req
	 * @param resp
	 * @return
	 */
	@RequestMapping(value = "/wx/kcap.htm", method = { RequestMethod.POST, RequestMethod.GET })
	@ResponseBody
	public AjaxJson kcap(HttpServletRequest req, HttpServletResponse resp) {
		AjaxJson json = new AjaxJson();
		JdbcTest jt = new JdbcTest();
		Integer type = (Integer) req.getSession().getAttribute("type");
		type = 2;
		//老师
		if (StringUtil.isNotEmpty(type) && type.equals(1)) {
			/*List<Map<String, Object>> userList = jt.kcapT(xh);
			if (userList != null && userList.size() > 0) {
				json.setObj(userList);
			}*/
		}
		//学生
		if (StringUtil.isNotEmpty(type) && type.equals(2)) {
			String classId = (String) req.getSession().getAttribute("classId");
			classId = "2013120801";
			if (StringUtil.isNotEmpty(classId)) {
				List<Map<String, Object>> userList = jt.kcapS(classId);
				if (userList != null && userList.size() > 0) {
					json.setObj(userList);
				}
			}
		}
		return json;
	}
}
