<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wh.dao.xyf.XyfChatMapper">
	<resultMap id="BaseResultMap" type="com.wh.xyfentity.XyfChat">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="msg" property="msg" jdbcType="VARCHAR" />
		<result column="from_user_id" property="fromUserId" jdbcType="VARCHAR" />
		<result column="to_user_id" property="toUserId" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, msg, from_user_id, to_user_id, create_time, status
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from xyf_chat
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		xyf_chat
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.wh.xyfentity.XyfChat">
		insert into xyf_chat (id, msg,
		from_user_id,
		to_user_id, create_time, status
		)
		values
		(#{id,jdbcType=VARCHAR}, #{msg,jdbcType=VARCHAR},
		#{fromUserId,jdbcType=VARCHAR},
		#{toUserId,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.wh.xyfentity.XyfChat">
		insert into xyf_chat
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="msg != null">
				msg,
			</if>
			<if test="fromUserId != null">
				from_user_id,
			</if>
			<if test="toUserId != null">
				to_user_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="msg != null">
				#{msg,jdbcType=VARCHAR},
			</if>
			<if test="fromUserId != null">
				#{fromUserId,jdbcType=VARCHAR},
			</if>
			<if test="toUserId != null">
				#{toUserId,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.wh.xyfentity.XyfChat">
		update xyf_chat
		<set>
			<if test="msg != null">
				msg = #{msg,jdbcType=VARCHAR},
			</if>
			<if test="fromUserId != null">
				from_user_id = #{fromUserId,jdbcType=VARCHAR},
			</if>
			<if test="toUserId != null">
				to_user_id = #{toUserId,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.wh.xyfentity.XyfChat">
		update xyf_chat
		set msg = #{msg,jdbcType=VARCHAR},
		from_user_id =
		#{fromUserId,jdbcType=VARCHAR},
		to_user_id =
		#{toUserId,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=INTEGER}
		where id = #{id,jdbcType=VARCHAR}
	</update>

	<!-- 聊一下list -->
	<select id="getMyChatList" resultType="java.util.Map"
		parameterType="java.lang.String">

SELECT  xu.`user_id` userId,
  xu.`nick_name` nickName,
  xu.headimage headImage ,
  t1.last_time create_time,
  DATE_FORMAT(t1.last_time, '%y-%m-%d') dayTime,
  DATE_FORMAT(t1.last_time, '%T') hourTime ,
  c.cnt unreadnum,
  xc.`msg`
  FROM (  SELECT * FROM (  SELECT  t.user_id, MAX(last_time) AS last_time FROM (
  SELECT 
    to_user_id user_id ,MAX(create_time) AS last_time
  FROM
    xyf_chat 
  WHERE from_user_id = #{userId,jdbcType=VARCHAR}
  GROUP BY to_user_id
  UNION
  SELECT 
    from_user_id user_id ,MAX(create_time) AS last_time
  FROM
    xyf_chat 
  WHERE to_user_id = #{userId,jdbcType=VARCHAR}
  GROUP BY from_user_id  
  ) t GROUP BY t.user_id) t WHERE user_id NOT IN (
SELECT to_user_id FROM xyf_relate WHERE from_user_id=#{userId,jdbcType=VARCHAR} AND relate=1)
		ORDER BY last_time DESC
  
  ) t1 LEFT JOIN xyf_user xu ON t1.user_id=xu.user_id
  LEFT JOIN xyf_chat xc ON t1.last_time=xc.create_time 
  
  LEFT JOIN ( SELECT from_user_id,COUNT(1) cnt FROM xyf_chat WHERE to_user_id=#{userId,jdbcType=VARCHAR}  AND STATUS = 0 GROUP BY from_user_id) c  ON t1.user_id=c.from_user_id
   ORDER BY t1.last_time DESC

	</select>

	<!--获取与我正在通话的人的未读信息 -->
	<select id="getUnreadChatList" resultType="java.util.Map"
		parameterType="java.lang.String">

		SELECT *, DATE_FORMAT(`create_time`, '%y-%m-%d')
		dayTime,
		DATE_FORMAT(`create_time`, '%T') hourTime FROM xyf_chat WHERE
		from_user_id=#{fromUserId,jdbcType=VARCHAR}
		AND
		to_user_id=#{toUserId,jdbcType=VARCHAR} AND STATUS =0

	</select>

	<!-- 更改聊天信息状态,未读变已读 -->
	<update id="updateStatus" parameterType="java.lang.String">
		update xyf_chat
		set
		status = 1
		where from_user_id=#{fromUserId,jdbcType=VARCHAR}
		AND
		to_user_id=#{toUserId,jdbcType=VARCHAR}
	</update>


	<!--获取最新聊天信息 -->
	<select id="getLastChatInfo" resultType="java.util.Map"
		parameterType="java.lang.String">

		SELECT * FROM (SELECT
		*,
		DATE_FORMAT(`create_time`, '%y-%m-%d') dayTime,
		DATE_FORMAT(`create_time`, '%T') hourTime
		FROM
		xyf_chat
		WHERE (from_user_id=#{fromUserId,jdbcType=VARCHAR} and to_user_id=#{toUserId,jdbcType=VARCHAR})
		or (to_user_id=#{fromUserId,jdbcType=VARCHAR} and from_user_id=#{toUserId,jdbcType=VARCHAR})
		ORDER BY create_time DESC ) a ORDER BY a.create_time ASC

	</select>
	
	
	<!-- 删除他人与我的聊天信息 -->
	<delete id="deleteChatInfo" parameterType="java.lang.String">
		delete from
		xyf_chat	
		WHERE from_user_id=#{toUserId,jdbcType=VARCHAR}  AND to_user_id=#{fromUserId,jdbcType=VARCHAR}
	</delete>
	
</mapper>